from libcpp cimport bool
cdef extern from 'ql/handle.hpp' namespace 'QuantLib' nogil:
    cdef cppclass Handle[T]:
        Handle()
        Handle(shared_ptr[T]&)
        Handle(shared_ptr[T]&, bool registerAsObserver)
        shared_ptr[T]& currentLink()
        bool empty()

    cdef cppclass RelinkableHandle[T](Handle):
        RelinkableHandle()
        RelinkableHandle(T*)
        RelinkableHandle(shared_ptr[T]&)
        RelinkableHandle(shared_ptr[T]&, bool registerAsObserver)
        void linkTo(shared_ptr[T]&)
        void linkTo(shared_ptr[T]&, bool registerAsObserver)

from quantlib.termstructures._yield_term_structure cimport YieldTermStructure as QlYieldTermStructure
from quantlib.termstructures.volatility.optionlet._optionlet_volatility_structure cimport OptionletVolatilityStructure as QlOptionletVolatilityStructure

{{for T in ("YieldTermStructure", "OptionletVolatilityStructure")}}
cdef class Handle{{T}}:
    cdef RelinkableHandler[{{T}}] handle
{{endfor}}
